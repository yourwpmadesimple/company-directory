{"version":3,"sources":["directory.js"],"names":["Filters","props","titles","window","LMDirectory","updateName","e","updateFormState","target","value","updateTitle","updateIntern","checked","currentName","currentTitle","map","title","key","display","isIntern","Person","person","name","img","bio","People","people","id","Directory","state","bind","val","setState","updatePeopleList","filteredPeople","filter","intern","toLowerCase","indexOf","title_cat","React","Component","ReactDOM","render","document","getElementById"],"mappings":";;;;;;;;;;;;AAAA,CAAC,YAAW;AACV;;AAEA,WAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIC,SAASC,OAAOC,WAAP,CAAmBF,MAAhC;;AAEA,aAASG,UAAT,CAAoBC,CAApB,EAAuB;AACrBL,YAAMM,eAAN,CAAsB,aAAtB,EAAqCD,EAAEE,MAAF,CAASC,KAA9C;AACD;;AAED,aAASC,WAAT,CAAqBJ,CAArB,EAAwB;AACtBL,YAAMM,eAAN,CAAsB,cAAtB,EAAsCD,EAAEE,MAAF,CAASC,KAA/C;AACD;;AAED,aAASE,YAAT,CAAsBL,CAAtB,EAAyB;AACvBL,YAAMM,eAAN,CAAsB,UAAtB,EAAkCD,EAAEE,MAAF,CAASI,OAA3C;AACD;;AAED,WACE;AAAA;AAAA,QAAM,QAAO,EAAb,EAAgB,IAAG,mBAAnB;AACE;AAAA;AAAA,UAAK,WAAU,OAAf;AACE;AAAA;AAAA,YAAO,SAAQ,aAAf;AAAA;AAAA,SADF;AAEE;AACE,gBAAK,MADP;AAEE,gBAAK,aAFP;AAGE,uBAAY,kBAHd;AAIE,cAAG,aAJL;AAKE,iBAAOX,MAAMY,WALf;AAME,oBAAUR;AANZ;AAFF,OADF;AAYE;AAAA;AAAA,UAAK,WAAU,OAAf;AACE;AAAA;AAAA,YAAO,SAAQ,cAAf;AAAA;AAAA,SADF;AAEE;AAAA;AAAA;AACE,kBAAK,cADP;AAEE,gBAAG,WAFL;AAGE,mBAAOJ,MAAMa,YAHf;AAIE,sBAAUJ,WAJZ;AAKE;AAAA;AAAA,cAAQ,OAAM,EAAd;AAAA;AAAA,WALF;AAMGR,iBAAOa,GAAP,CAAW,UAASC,KAAT,EAAgB;AAC1B,mBACE;AAAA;AAAA,gBAAQ,OAAOA,MAAMC,GAArB,EAA0B,KAAKD,MAAMC,GAArC;AACGD,oBAAME;AADT,aADF;AAKD,WANA;AANH;AAFF,OAZF;AA6BE;AAAA;AAAA,UAAK,WAAU,OAAf;AACE;AAAA;AAAA;AACE;AACE,kBAAK,UADP;AAEE,mBAAM,GAFR;AAGE,kBAAK,eAHP;AAIE,qBAASjB,MAAMkB,QAJjB;AAKE,sBAAUR;AALZ,YADF;AAOK,aAPL;AAAA;AAAA;AADF;AA7BF,KADF;AA4CD;;AAED,WAASS,MAAT,CAAgBnB,KAAhB,EAAuB;AACrB,WACE;AAAA;AAAA,QAAK,WAAU,QAAf;AACE;AAAA;AAAA;AACGA,cAAMoB,MAAN,CAAaC,IADhB;AAAA;AACwBrB,cAAMoB,MAAN,CAAaL;AADrC,OADF;AAKE;AAAA;AAAA;AACE;AACE,qBAAU,wBADZ;AAEE,eAAKf,MAAMoB,MAAN,CAAaE,GAFpB;AAGE,eAAKtB,MAAMoB,MAAN,CAAaC,IAHpB;AAIE,iBAAM,KAJR;AAKE,kBAAO,KALT;AAME,iBAAM;AANR,UADF;AASGrB,cAAMoB,MAAN,CAAaG;AAThB;AALF,KADF;AAmBD;;AAED,WAASC,MAAT,CAAgBxB,KAAhB,EAAuB;AACrB,WACE;AAAA;AAAA,QAAK,WAAU,SAAf;AACE;AAAC,4BAAD,CAAsB,eAAtB;AAAA;AACGA,cAAMyB,MAAN,CAAaX,GAAb,CAAiB,UAASM,MAAT,EAAiB;AACjC,iBACE;AAAC,gCAAD,CAAsB,aAAtB;AAAA;AACE,mBAAKA,OAAOM,EADd;AAEE,0BAAW,MAFb;AAGE,uBAAS,GAHX;AAIA,gCAAC,MAAD,IAAQ,QAAQN,MAAhB;AAJA,WADF;AAQD,SATA;AADH;AADF,KADF;AAgBD;;AAvGS,MAyGJO,SAzGI;AAAA;;AA0GR,uBAAY3B,KAAZ,EAAmB;AAAA;;AAAA,wHACXA,KADW;;AAGjB,YAAK4B,KAAL,GAAa;AACXH,gBAAQvB,OAAOC,WAAP,CAAmBsB,MADhB;AAEXb,qBAAa,EAFF;AAGXC,sBAAc,EAHH;AAIXK,kBAAU;AAJC,OAAb;AAMA,YAAKZ,eAAL,GAAuB,MAAKA,eAAL,CAAqBuB,IAArB,OAAvB;AATiB;AAUlB;;AApHO;AAAA;AAAA,sCAsHQR,IAtHR,EAsHcS,GAtHd,EAsHmB;AACzB,aAAKC,QAAL,qBAGKV,IAHL,EAGYS,GAHZ,GAKE,KAAKE,gBALP;AAOD;;AAED;;AAhIQ;AAAA;AAAA,yCAiIW;AACjB,YAAIC,iBAAiB/B,OAAOC,WAAP,CAAmBsB,MAAnB,CAA0BS,MAA1B,CACnB,UAASd,MAAT,EAAiB;AACf,iBACEA,OAAOe,MAAP,KAAkB,KAAKP,KAAL,CAAWV,QAA7B,KACC,KAAKU,KAAL,CAAWhB,WAAX,KAA2B,EAA3B,IACCQ,OAAOC,IAAP,CAAYe,WAAZ,GAA0BC,OAA1B,CAAkC,KAAKT,KAAL,CAAWhB,WAAX,CAAuBwB,WAAvB,EAAlC,MACE,CAAC,CAHL,MAIC,KAAKR,KAAL,CAAWf,YAAX,KAA4B,EAA5B,IACCO,OAAOkB,SAAP,KAAqB,KAAKV,KAAL,CAAWf,YALlC,CADF;AAQD,SATD,CASEgB,IATF,CASO,IATP,CADmB,CAArB;;AAaA,aAAKE,QAAL,CAAc;AACZN,kBAAQQ;AADI,SAAd;AAGD;AAlJO;AAAA;AAAA,+BAoJC;AACP,eACE;AAAA;AAAA,YAAK,WAAU,mBAAf;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE,8BAAC,OAAD;AACE,yBAAa,KAAKL,KAAL,CAAWhB,WAD1B;AAEE,0BAAc,KAAKgB,KAAL,CAAWf,YAF3B;AAGE,sBAAU,KAAKe,KAAL,CAAWV,QAHvB;AAIE,6BAAiB,KAAKZ;AAJxB,YAFF;AASE,8BAAC,MAAD,IAAQ,QAAQ,KAAKsB,KAAL,CAAWH,MAA3B;AATF,SADF;AAaD;AAlKO;;AAAA;AAAA,IAyGcc,MAAMC,SAzGpB;;AAqKVC,WAASC,MAAT,CAAgB,oBAAC,SAAD,OAAhB,EAA+BC,SAASC,cAAT,CAAwB,gBAAxB,CAA/B;AACD,CAtKD","sourcesContent":["(function() {\n  \"use strict\";\n\n  function Filters(props) {\n    let titles = window.LMDirectory.titles;\n\n    function updateName(e) {\n      props.updateFormState(\"currentName\", e.target.value);\n    }\n\n    function updateTitle(e) {\n      props.updateFormState(\"currentTitle\", e.target.value);\n    }\n\n    function updateIntern(e) {\n      props.updateFormState(\"isIntern\", e.target.checked);\n    }\n\n    return (\n      <form action=\"\" id=\"directory-filters\">\n        <div className=\"group\">\n          <label htmlFor=\"person-name\">Name:</label>\n          <input\n            type=\"text\"\n            name=\"person_name\"\n            placeholder=\"Name of employee\"\n            id=\"person-name\"\n            value={props.currentName}\n            onChange={updateName}\n          />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"person-title\">Job Title:</label>\n          <select\n            name=\"person_title\"\n            id=\"sel-title\"\n            value={props.currentTitle}\n            onChange={updateTitle}>\n            <option value=\"\">- Select -</option>\n            {titles.map(function(title) {\n              return (\n                <option value={title.key} key={title.key}>\n                  {title.display}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"group\">\n          <label>\n            <input\n              type=\"checkbox\"\n              value=\"1\"\n              name=\"person_intern\"\n              checked={props.isIntern}\n              onChange={updateIntern}\n            />{\" \"}\n            Intern\n          </label>\n        </div>\n      </form>\n    );\n  }\n\n  function Person(props) {\n    return (\n      <div className=\"person\">\n        <h3>\n          {props.person.name}, {props.person.title}\n        </h3>\n\n        <p>\n          <img\n            className=\"size-medium alignright\"\n            src={props.person.img}\n            alt={props.person.name}\n            width=\"300\"\n            height=\"300\"\n            sizes=\"(max-width: 300px) 100vw, 300px\"\n          />\n          {props.person.bio}\n        </p>\n      </div>\n    );\n  }\n\n  function People(props) {\n    return (\n      <div className=\"results\">\n        <ReactTransitionGroup.TransitionGroup>\n          {props.people.map(function(person) {\n            return (\n              <ReactTransitionGroup.CSSTransition \n                key={person.id} \n                classNames=\"fade\" \n                timeout={800}>\n              <Person person={person} />\n              </ReactTransitionGroup.CSSTransition>\n            );\n          })}\n        </ReactTransitionGroup.TransitionGroup>\n      </div>\n    );\n  }\n\n  class Directory extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        people: window.LMDirectory.people,\n        currentName: \"\",\n        currentTitle: \"\",\n        isIntern: false\n      };\n      this.updateFormState = this.updateFormState.bind(this);\n    }\n\n    updateFormState(name, val) {\n      this.setState(\n        {\n          // [name] is the computed value (syntactic sugar)\n          [name]: val\n        },\n        this.updatePeopleList\n      );\n    }\n\n    // search the whole employee list with current filters\n    updatePeopleList() {\n      var filteredPeople = window.LMDirectory.people.filter(\n        function(person) {\n          return (\n            person.intern === this.state.isIntern &&\n            (this.state.currentName === \"\" ||\n              person.name.toLowerCase().indexOf(this.state.currentName.toLowerCase()) !==\n                -1) &&\n            (this.state.currentTitle === \"\" ||\n              person.title_cat === this.state.currentTitle)\n          );\n        }.bind(this)\n      );\n\n      this.setState({\n        people: filteredPeople\n      });\n    }\n\n    render() {\n      return (\n        <div className=\"company-directory\">\n          <h2>Company Directory</h2>\n          <Filters\n            currentName={this.state.currentName}\n            currentTitle={this.state.currentTitle}\n            isIntern={this.state.isIntern}\n            updateFormState={this.updateFormState}\n          />\n\n          <People people={this.state.people} />\n        </div>\n      );\n    }\n  } \n\n  ReactDOM.render(<Directory />, document.getElementById(\"directory-root\"));\n})();\n"]}